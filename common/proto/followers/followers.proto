syntax = "proto3";

option go_package = "github.com/stojic19/XWS-TIM15/common/proto/followers";

package followers;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service FollowersService{
  rpc Follow(FollowRequest) returns(FollowResponse){
    option(google.api.http) = {
      put: "/followers/follow"
      body: "*"
    };
  }
  rpc ConfirmFollow(ConfirmFollowRequest) returns(ConfirmFollowResponse){
    option(google.api.http) = {
      put: "/followers/followRequest"
      body: "*"
    };
  }
  rpc Unfollow(UnfollowRequest) returns(UnfollowResponse){
    option(google.api.http) = {
      delete: "/followers/follow"
      body: "*"
    };
  }
  rpc RemoveFollowRequest(RemoveFollowRequestRequest) returns(RemoveFollowRequestResponse){
    option(google.api.http) = {
      delete: "/followers/followRequest"
      body: "*"
    };
  }
  rpc GetFollows(GetFollowsRequest) returns(GetFollowsResponse){
    option(google.api.http) = {
      get: "/followers/follows/{id}"
    };
  }
  rpc GetFollowers(GetFollowersRequest) returns(GetFollowersResponse){
    option(google.api.http) = {
      get: "/followers/followers/{id}"
    };
  }
  rpc GetFollowRequests(GetFollowRequestsRequest) returns(GetFollowRequestsResponse){
    option(google.api.http) = {
      get: "/followers/followRequests/{id}"
    };
  }
  rpc GetFollowerRequests(GetFollowerRequestsRequest) returns(GetFollowerRequestsResponse){
    option(google.api.http) = {
      get: "/followers/followerRequests/{id}"
    };
  }
  rpc GetRelationship(GetRelationshipRequest) returns(GetRelationshipResponse){
    option(google.api.http) = {
      get: "/followers/relationship/{followedId}/{followerId}"
    };
  }

  rpc Block(Request) returns(Response){
    option(google.api.http) = {
      put: "/followers/block",
      body: "*"
    };
  }

  rpc Unblock(Request) returns(Response){
    option(google.api.http) = {
      delete: "/followers/block/{subjectId}/{objectId}"
    };
  }

  rpc GetBlockedAccounts(Id)returns(IdList){
    option(google.api.http) = {
      get: "/followers/blocked/{id}"
    };
  }

  rpc GetBlockerAccounts(Id)returns(IdList){
    option(google.api.http) = {
      get: "/followers/blockers/{id}"
    };
  }

  rpc GetRecommendedUsers(Id)returns(IdList){
    option(google.api.http) = {
      get: "/followers/recommended/{id}"
    };
  }

}

message Request{
  string subjectId = 1;
  string objectId = 2;
}

message Response{
  string response = 1;
}

message Id{
  string id = 1;
}

message IdList{
  repeated Id ids = 1;
}

message FollowRequest{
  string followerId = 1;
  string followedId = 2;
}

message FollowResponse{
  string response = 1;
}

message ConfirmFollowRequest{
  string followerId = 1;
  string followedId = 2;
}

message ConfirmFollowResponse{
  string response = 1;
}

message UnfollowRequest{
  string followerId = 1;
  string followedId = 2;
}

message UnfollowResponse{
  string response = 1;
}

message RemoveFollowRequestRequest{
  string followerId = 1;
  string followedId = 2;
}

message RemoveFollowRequestResponse{
  string response = 1;
}

message GetFollowsRequest{
  string id = 1;
}

message GetFollowsResponse{
  repeated Follower follows = 1;
}

message GetFollowersRequest{
  string id = 1;
}

message GetFollowersResponse{
  repeated Follower followers = 1;
}

message GetFollowRequestsRequest{
  string id = 1;
}

message GetFollowRequestsResponse{
  repeated Follower followRequests = 1;
}

message GetFollowerRequestsRequest{
  string id = 1;
}

message GetFollowerRequestsResponse{
  repeated Follower followerRequests = 1;
}

message GetRelationshipRequest{
  string followerId = 1;
  string followedId = 2;
}

message GetRelationshipResponse{
  string relationship = 1;
}

message Follower{
  string id = 1;
  google.protobuf.Timestamp time = 2;
}

//protoc -I ./proto --go_out=./proto --go_opt=paths=source_relative --go-grpc_out=./proto --go-grpc_opt=paths=source_relative --grpc-gateway_out=allow_delete_body=true:./proto --grpc-gateway_opt=paths=source_relative ./proto/followers/followers.proto

