version: "3.8"

services:
  followers_service:
    image: followers_service
    container_name: followers_service
    build:
      context: .
      dockerfile: ./Followers_microservice/Dockerfile
    restart: on-failure
    environment:
      FOLLOWERS_SERVICE_PORT: ${FOLLOWERS_SERVICE_PORT}
      NEO4J_DATABASE: ${NEO4J_DATABASE}
      FOLLOWERS_DB_HOST: ${FOLLOWERS_DB_HOST}
      NEO4J_USER: ${NEO4J_USER}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_VERSION: ${NEO4J_VERSION}
    depends_on:
      - followers_db
    networks:
      - network

  followers_db:
    image: neo4j
    container_name: followers_db
    restart: on-failure
    environment:
      NEO4J_AUTH: none
    ports:
      - 7474:7474
      - 7687:7687
    networks:
      - network

  posts_service:
    image: posts_service
    container_name: posts_service
    build:
      context: .
      dockerfile: ./Posts_microservice/Dockerfile
    restart: on-failure
    environment:
      POSTS_SERVICE_PORT: ${POSTS_SERVICE_PORT}
      POSTS_DB_HOST: ${POSTS_DB_HOST}
      POSTS_DB_PORT: ${POSTS_DB_PORT}
    depends_on:
      - posts_db
    networks:
      - network

  posts_db:
    image: mongo
    container_name: posts_db
    restart: on-failure
    networks:
      - network
            
  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      FOLLOWERS_SERVICE_HOST: ${FOLLOWERS_SERVICE_HOST}
      FOLLOWERS_SERVICE_PORT: ${FOLLOWERS_SERVICE_PORT}
      POSTS_SERVICE_HOST: ${POSTS_SERVICE_HOST}
      POSTS_SERVICE_PORT: ${POSTS_SERVICE_PORT}
    networks:
      - network

networks:
  network:
    driver: bridge